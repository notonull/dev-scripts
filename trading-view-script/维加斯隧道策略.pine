//@version=5
strategy("维加斯隧道交易策略", overlay=true, initial_capital=3000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, commission_type=strategy.commission.percent, commission_value=0)

// === 可调参数 ===
emaFilterPeriod = input.int(12, "过滤线")
emaMid1Period = input.int(144, "中短期隧道上轨")
emaMid2Period = input.int(169, "中短期隧道下轨")
emaLong1Period = input.int(576, "长期隧道上轨")
emaLong2Period = input.int(676, "长期隧道下轨")
fundSettlementDays = input.int(1, "资金交割日 (N个交易日后)")

// === 计算EMA ===
emaFilter = ta.ema(close, emaFilterPeriod)
emaMid1 = ta.ema(close, emaMid1Period)
emaMid2 = ta.ema(close, emaMid2Period)
emaLong1 = ta.ema(close, emaLong1Period)
emaLong2 = ta.ema(close, emaLong2Period)

// === 用户输入颜色 ===
emaFilterColor = input.color(color.white, "过滤线颜色")
midLongColorInput = input.color(color.aqua, "中短期多头")
midShortColorInput = input.color(color.orange, "中短期空头")
longLongColorInput = input.color(color.green, "长期多头")
longShortColorInput = input.color(color.red, "长期空头")

// === 添加透明度用于隧道填充 ===
midLongColor = color.new(midLongColorInput, 40)
midShortColor = color.new(midShortColorInput, 40)
longLongColor = color.new(longLongColorInput, 40)
longShortColor = color.new(longShortColorInput, 40)

// === 绘制EMA线 ===
plot(emaFilter, color=emaFilterColor, title="过滤线")
plot_emaMid1 = plot(emaMid1, color=midLongColorInput, title="中短期上轨")
plot_emaMid2 = plot(emaMid2, color=midShortColorInput, title="中短期下轨")
plot_emaLong1 = plot(emaLong1, color=longLongColorInput, title="长期上轨")
plot_emaLong2 = plot(emaLong2, color=longShortColorInput, title="长期下轨")

// === 隧道趋势判定与填充 ===
isMidUp = emaMid1 > emaMid2
fillMidColor = isMidUp ? midLongColor : midShortColor
fill(plot_emaMid1, plot_emaMid2, color=fillMidColor, title="中短期隧道")

isLongUp = emaLong1 > emaLong2
fillLongColor = isLongUp ? longLongColor : longShortColor
fill(plot_emaLong1, plot_emaLong2, color=fillLongColor, title="长期隧道")

// === 策略逻辑 ===
// === 策略参数 ===
initialPositionSize = input.float(0.3, "初始仓位比例", minval=0.1, maxval=1.0, step=0.1)
addPositionSize = input.float(0.2, "加仓仓位比例", minval=0.05, maxval=0.5, step=0.05)
maxPositionSize = input.float(1.0, "最大仓位比例", minval=0.5, maxval=2.0, step=0.1)

// === 交易信号 ===
// 条件1：价格在中短期隧道上轨之上，长期趋势多头
priceAboveMid = close > emaMid1
trendLong = emaLong1 > emaLong2
trendMid = emaMid1 > emaMid2

// 开仓信号（第一次入场）
// === 隧道上升方向判断 ===
// 上升方向定义：当前EMA大于前一根K线EMA
midUpTrend = emaMid1 > emaMid1[1] and emaMid2 > emaMid2[1]       // 中短期隧道上升
longUpTrend = emaLong1 > emaLong1[1] and emaLong2 > emaLong2[1]   // 长期隧道上升

// === 做多条件 ===
canGoLong = midUpTrend and longUpTrend

// === 开仓信号（只做多，且满足隧道上升） ===
firstEntrySignal = canGoLong and strategy.position_size == 0 and close > emaFilter  // 价格也在过滤线上方

// 加仓信号（阳线回踩未破中短期下轨）
isBullish = close > open
pullbackThreshold = 0.01  // 可调回踩幅度
isPullback = close <= emaMid1 * (1 + pullbackThreshold) and close >= emaMid1
pullbackSignal = isBullish and trendLong and trendMid and strategy.position_size > 0 and isPullback

// 平仓信号（价格跌破中短期下轨或长期下轨）
exitSignal = close < emaMid2 or close < emaLong2

// 重新入场信号（价格回到中短期上轨以上，长期趋势多头且空仓）
reEntrySignal = priceAboveMid and trendLong and strategy.position_size == 0

// === 仓位管理执行 ===
// 开仓
if firstEntrySignal
    strategy.entry("开仓", strategy.long, qty=strategy.equity * initialPositionSize / close, when=barstate.isconfirmed)

// 加仓
if pullbackSignal
    currentPosition = strategy.position_size
    maxAllowedPosition = strategy.equity * maxPositionSize / close
    if currentPosition < maxAllowedPosition
        addQty = strategy.equity * addPositionSize / close
        strategy.entry("加仓", strategy.long, qty=addQty, when=barstate.isconfirmed)

// 平仓
if exitSignal
    strategy.close_all(when=barstate.isconfirmed, comment="平仓信号")

// 重新入场
if reEntrySignal
    strategy.entry("重新入场", strategy.long, qty=strategy.equity * initialPositionSize / close, when=barstate.isconfirmed)

// === 信号标记（优化，避免重复） ===
var lastEntryBar = 0
var lastAddBar = 0
var lastExitBar = 0
var lastReEntryBar = 0

// 开仓信号（只在持仓前触发一次）
newEntrySignal = firstEntrySignal and bar_index != lastEntryBar
if newEntrySignal
    lastEntryBar := bar_index
plotshape(newEntrySignal, title="开仓信号", location=location.belowbar, color=color.green, style=shape.triangleup, size=size.normal)

// 加仓信号（只在每次加仓时触发一次）
newAddSignal = pullbackSignal and bar_index != lastAddBar
if newAddSignal
    lastAddBar := bar_index
plotshape(newAddSignal, title="加仓信号", location=location.belowbar, color=color.blue, style=shape.circle, size=size.small)

// 平仓信号（只在持仓且首次触发时显示）
newExitSignal = exitSignal and strategy.position_size > 0 and bar_index != lastExitBar
if newExitSignal
    lastExitBar := bar_index
plotshape(newExitSignal, title="平仓信号", location=location.abovebar, color=color.red, style=shape.triangledown, size=size.normal)

// 重新入场信号（只在空仓时触发一次）
newReEntrySignal = reEntrySignal and bar_index != lastReEntryBar
if newReEntrySignal
    lastReEntryBar := bar_index
plotshape(newReEntrySignal, title="重入信号", location=location.belowbar, color=color.lime, style=shape.diamond, size=size.small)