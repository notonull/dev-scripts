//@version=6
strategy('双均线交易策略', overlay = true, margin_long = 100, margin_short = 100, initial_capital = 3000, process_orders_on_close = true)

// === 基础参数输入 ===
lenSMA1 = input.int(20, title = 'SMA1')
lenEMA1 = input.int(20, title = 'EMA1')
lenSMA2 = input.int(60, title = 'SMA2')
lenEMA2 = input.int(60, title = 'EMA2')
lenSMA3 = input.int(120, title = 'SMA3')
lenEMA3 = input.int(120, title = 'EMA3')

// === 显示控制 ===
showInfoTable = input.bool(false, title = '显示信息表格')
enableMA = input.bool(true, title = '启用均线')
enableMagicNine = input.bool(false, title = '启用神奇九转')

// === K线标记设置 ===
enableCandleMarking = input.bool(true, title = '启用K线标记')
enableVolumeBackground = input.bool(false, title = '启用量价关系')
riseThreshold = 2.0  // 固定阈值2%
fallThreshold = 2.0  // 固定阈值2%





// === 均线计算 ===
sma1 = ta.sma(close, lenSMA1)
ema1 = ta.ema(close, lenEMA1)
sma2 = ta.sma(close, lenSMA2)
ema2 = ta.ema(close, lenEMA2)
sma3 = ta.sma(close, lenSMA3)
ema3 = ta.ema(close, lenEMA3)

// === 颜色定义 ===
sma1Color = color.rgb(255, 230, 100) // 浅黄
ema1Color = color.rgb(200, 160, 0) // 深黄
sma2Color = color.rgb(120, 200, 255) // 浅蓝
ema2Color = color.rgb(0, 80, 200) // 深蓝
sma3Color = color.rgb(255, 150, 150) // 浅红
ema3Color = color.rgb(223, 20, 241) // 深红

// === 绘制均线 ===
plot(enableMA ? sma1 : na, color = sma1Color, title = 'SMA1', display = display.none)
plot(enableMA ? ema1 : na, color = ema1Color, title = 'EMA1')
plot(enableMA ? sma2 : na, color = sma2Color, title = 'SMA2', display = display.none)
plot(enableMA ? ema2 : na, color = ema2Color, title = 'EMA2')
plot(enableMA ? sma3 : na, color = sma3Color, title = 'SMA3', display = display.none)
plot(enableMA ? ema3 : na, color = ema3Color, title = 'EMA3', display = display.none)

// === K线形态识别 ===
// 计算K线涨跌幅
candleChangePercent = (close - open) / open * 100

// === 神奇九转TD Sequential参数 ===

// === 神奇九转核心逻辑 ===
var int TD = 0
var int TS = 0
var int TDUp = 0
var int TDDn = 0
var bool sell = false
var bool buy = false
var bool sellsetup = false
var bool buysetup = false
var bool sellovershoot = false
var bool sellovershoot1 = false
var bool sellovershoot2 = false
var bool sellovershoot3 = false
var bool buyovershoot = false
var bool buyovershoot1 = false
var bool buyovershoot2 = false
var bool buyovershoot3 = false
var float TDbuyh = na
var float TDbuyl = na
var float TDsellh = na
var float TDselll = na

// K线信息显示控制变量
var bool showKlineInfo = false
var string klineTooltip = ""
var string candleTooltip = ""

if enableMagicNine
    // 基础计数逻辑
    TD := close > close[4] ? nz(TD[1]) + 1 : 0
    TS := close < close[4] ? nz(TS[1]) + 1 : 0

    TDUp := TD - ta.valuewhen(TD < TD[1], TD, 1)
    TDDn := TS - ta.valuewhen(TS < TS[1], TS, 1)

    // Setup识别逻辑（johan.gradin算法）
    priceflip = ta.barssince(close < close[4])
    sellsetup := close > close[4] and priceflip >= 0
    sell := sellsetup and priceflip == 9
    sellovershoot := sellsetup and priceflip == 13
    sellovershoot1 := sellsetup and priceflip == 14
    sellovershoot2 := sellsetup and priceflip == 15
    sellovershoot3 := sellsetup and priceflip == 16

    priceflip1 = ta.barssince(close > close[4])
    buysetup := close < close[4] and priceflip1 >= 0
    buy := buysetup and priceflip1 == 9
    buyovershoot := buysetup and priceflip1 == 13
    buyovershoot1 := buysetup and priceflip1 == 14
    buyovershoot2 := buysetup and priceflip1 == 15
    buyovershoot3 := buysetup and priceflip1 == 16

    // TD支撑阻力线
    TDbuyh := ta.valuewhen(buy, high, 0)
    TDbuyl := ta.valuewhen(buy, low, 0)
    TDsellh := ta.valuewhen(sell, high, 0)
    TDselll := ta.valuewhen(sell, low, 0)
else
    // 重置所有TD变量
    TD := 0
    TS := 0
    TDUp := 0
    TDDn := 0
    sell := false
    buy := false
    sellsetup := false
    buysetup := false
    sellovershoot := false
    sellovershoot1 := false
    sellovershoot2 := false
    sellovershoot3 := false
    buyovershoot := false
    buyovershoot1 := false
    buyovershoot2 := false
    buyovershoot3 := false
    TDbuyh := na
    TDbuyl := na
    TDsellh := na
    TDselll := na

// TD K线着色（全局作用域）
tdBarColor = color(na)
if enableMagicNine
    if sell
        tdBarColor := #FF0000
    else if buy
        tdBarColor := #00FF00
    else if sellovershoot
        tdBarColor := #FF66A3
    else if sellovershoot1
        tdBarColor := #FF3385
    else if sellovershoot2
        tdBarColor := #FF0066
    else if sellovershoot3
        tdBarColor := #CC0052
    else if buyovershoot
        tdBarColor := #D6FF5C
    else if buyovershoot1
        tdBarColor := #D1FF47
    else if buyovershoot2
        tdBarColor := #B8E62E
    else if buyovershoot3
        tdBarColor := #8FB224

barcolor(tdBarColor, title="TD Sequential K线着色")

// === 神奇九转数字标记显示（智能颜色管理，失效数字变黑） ===
if enableMagicNine
    // 上涨数字标记
    if TDUp >= 1 and TDUp <= 9 and TDUp[1] != TDUp
        // 检测序列回退：当前数字小于前一个数字(序列被打断)
        if TDUp < TDUp[1] and TDUp[1] >= 1 and TDUp[1] <= 9
            // 首先显示失效的数字(灰色) - 从当前数字+1到前一个数字
            if TDUp[1] > TDUp
                for i = TDUp + 1 to TDUp[1]
                    label.new(bar_index, high*1.015, text=str.tostring(i), style=label.style_none, 
                              color=color.new(color.white, 100), textcolor=color.gray, size=size.small)
            // 然后显示当前数字(绿色)
            label.new(bar_index, high*1.015, text=str.tostring(TDUp), style=label.style_none, 
                      color=color.new(color.white, 100), textcolor=color.green, size=size.small)
        else
            // 正常序列，显示绿色数字
            label.new(bar_index, high*1.015, text=str.tostring(TDUp), style=label.style_none, 
                      color=color.new(color.white, 100), textcolor=color.green, size=size.small)
    
    // 下跌数字标记
    if TDDn >= 1 and TDDn <= 9 and TDDn[1] != TDDn
        // 检测序列回退：当前数字小于前一个数字(序列被打断)
        if TDDn < TDDn[1] and TDDn[1] >= 1 and TDDn[1] <= 9
            // 首先显示失效的数字(灰色) - 从当前数字+1到前一个数字
            if TDDn[1] > TDDn
                for i = TDDn + 1 to TDDn[1]
                    label.new(bar_index, low*0.985, text=str.tostring(i), style=label.style_none, 
                              color=color.new(color.white, 100), textcolor=color.gray, size=size.small)
            // 然后显示当前数字(红色)
            label.new(bar_index, low*0.985, text=str.tostring(TDDn), style=label.style_none, 
                      color=color.new(color.white, 100), textcolor=color.red, size=size.small)
        else
            // 正常序列，显示红色数字
            label.new(bar_index, low*0.985, text=str.tostring(TDDn), style=label.style_none, 
                      color=color.new(color.white, 100), textcolor=color.red, size=size.small)


// === 基础技术指标计算（用于量价关系） ===
avgVolume = ta.sma(volume, 20)

// 量价判断阈值
volumeHighThreshold = 1.5  // 高成交量阈值倍数
volumeLowThreshold = 0.7   // 低成交量阈值倍数

// 量价背景判断
isHighVolume = volume >= avgVolume * volumeHighThreshold
isLowVolume = volume <= avgVolume * volumeLowThreshold

// 原有逻辑保持
isObviousRise = enableCandleMarking and candleChangePercent >= riseThreshold and close > open
isObviousFall = enableCandleMarking and candleChangePercent <= -fallThreshold and close < open

// === K线信息标记（圆点+详细分析提示，智能位置避让） ===
if isObviousRise
    // 有九转时圆点放远一些，没有九转时圆点靠近
    risePosition = enableMagicNine ? low*0.95 : low*0.985
    label.new(bar_index, risePosition, text="●", style=label.style_none, 
              color=color.new(color.white, 100), textcolor=color.new(color.green, 0), 
              size=size.normal, xloc=xloc.bar_index, tooltip=candleTooltip)
if isObviousFall
    // 有九转时圆点放远一些，没有九转时圆点靠近
    fallPosition = enableMagicNine ? high*1.05 : high*1.015
    label.new(bar_index, fallPosition, text="●", style=label.style_none, 
              color=color.new(color.white, 100), textcolor=color.new(color.red, 0), 
              size=size.normal, xloc=xloc.bar_index, tooltip=candleTooltip)

// 趋势判断（临时使用固定均线，稍后会更新为策略均线）
trendUp = ema1 > ema2
trendDown = ema1 < ema2

// 计算K线实体大小（用于标记强度判断）
candleBodySize = math.abs(close - open)
avgBodySize = ta.sma(candleBodySize, 20) // 20周期平均实体大小
isStrongCandle = candleBodySize > avgBodySize * 1.5 // 实体大于平均值1.5倍视为强势K线

// 计算背景渐变透明度（根据涨跌幅强度）
riseIntensity = 0.0
fallIntensity = 0.0

if enableCandleMarking
    if isObviousRise // 普通上涨
        riseIntensity := math.round(math.min(math.abs(candleChangePercent) * 5, 35))

    if isObviousFall // 普通下跌
        fallIntensity := math.round(math.min(math.abs(candleChangePercent) * 5, 35))

// === K线形态标记 ===
// K线背景渐变（根据涨跌幅强度显示）
traditionalBgColor = riseIntensity > 0 ? color.new(color.green, 100 - riseIntensity) :
                     fallIntensity > 0 ? color.new(color.red, 100 - fallIntensity) : na

// 量价关系背景（仅在启用时显示）
var color volumePriceBgColor = na
volumePriceBgColor := na
if enableVolumeBackground and enableCandleMarking
    if isObviousRise and isHighVolume
        volumePriceBgColor := color.new(color.lime, 80)  // 涨量
    else if isObviousFall and isHighVolume
        volumePriceBgColor := color.new(color.red, 80)   // 跌量
    else if isObviousRise and isLowVolume
        volumePriceBgColor := color.new(color.orange, 85) // 涨缩量
    else if isObviousFall and isLowVolume
        volumePriceBgColor := color.new(color.purple, 85) // 跌缩量

// 应用背景颜色
// 当启用量价关系时，优先显示量价背景，否则显示传统涨跌背景
finalBgColor = enableVolumeBackground ? (not na(volumePriceBgColor) ? volumePriceBgColor : traditionalBgColor) : na
bgcolor(finalBgColor, title = 'K线背景')

// === 格式化函数定义（提前定义） ===
// 格式化成交量单位
formatVolume(vol) =>
    if vol >= 100000000
        str.tostring(vol/100000000, "#.##") + "亿"
    else if vol >= 10000
        str.tostring(vol/10000, "#.##") + "万"
    else
        str.tostring(vol, "#")

// 格式化价格单位
formatPrice(price) =>
    if price >= 1000
        str.tostring(price, "#.##") + "元"
    else if price >= 100
        str.tostring(price, "#.###") + "元"
    else if price >= 10
        str.tostring(price, "#.####") + "元"
    else
        str.tostring(price, "#.#####") + "元"

// === K线悬停信息功能 ===
// 构建K线详细分析信息用于鼠标悬停显示
if enableCandleMarking
    candleTooltip := "=== K线分析 ===\n"

    // 基础K线信息
    candleTooltip += "开盘价: " + str.tostring(open, "#.####") + "\n"
    candleTooltip += "最高价: " + str.tostring(high, "#.####") + "\n"
    candleTooltip += "最低价: " + str.tostring(low, "#.####") + "\n"
    candleTooltip += "收盘价: " + str.tostring(close, "#.####") + "\n"
    candleTooltip += "涨跌幅: " + str.tostring(candleChangePercent, "#.##") + "%\n"

    // K线类型描述
    if isObviousRise
        candleTooltip += "\n📈 明显上涨信号"
        candleTooltip += "\n涨幅超过 " + str.tostring(riseThreshold, "#.#") + "% 阈值"
    else if isObviousFall
        candleTooltip += "\n📉 明显下跌信号"
        candleTooltip += "\n跌幅超过 " + str.tostring(fallThreshold, "#.#") + "% 阈值"
    else
        candleTooltip += "\n➡️ 正常波动"
        candleTooltip += "\n波动幅度在正常范围内"

    // 成交量分析
    candleTooltip += "\n\n=== 成交量分析 ==="
    candleTooltip += "\n当前成交量: " + formatVolume(volume) + "\n"
    candleTooltip += "平均成交量: " + formatVolume(avgVolume) + "\n"
    candleTooltip += "量能倍数: " + str.tostring(volume/avgVolume, "#.##") + "倍\n"

    if isHighVolume
        candleTooltip += "📊 高成交量 (>" + str.tostring(volumeHighThreshold, "#.#") + "倍平均量)"
    else if isLowVolume
        candleTooltip += "📊 低成交量 (<" + str.tostring(volumeLowThreshold, "#.#") + "倍平均量)"
    else
        candleTooltip += "📊 正常成交量"

    // 高级技术分析
    candleTooltip += "\n\n=== 高级技术分析 ==="
    
    // 量能结构分析
    candleTooltip += "\n【量能结构】："
    if isObviousRise and isHighVolume and candleChangePercent < 1.0
        candleTooltip += "滞涨放量"
    else if isObviousFall and isLowVolume and candleChangePercent > -1.0
        candleTooltip += "缩量筑底" 
    else if isObviousRise and isHighVolume
        candleTooltip += "放量突破"
    else if isObviousFall and isHighVolume
        candleTooltip += "放量破位"
    else if isLowVolume
        candleTooltip += "缩量盘整"
    else
        candleTooltip += "正常换手"
    
    // 动能指标分析
    macd_line = ta.ema(close, 12) - ta.ema(close, 26)
    signal_line = ta.ema(macd_line, 9)
    macd_hist = macd_line - signal_line
    
    candleTooltip += "\n【动能指标】："
    if macd_hist > 0 and macd_hist < macd_hist[1] and close > close[5] and macd_line < macd_line[5]
        candleTooltip += "MACD顶背离"
    else if macd_hist < 0 and macd_hist > macd_hist[1] and close < close[5] and macd_line > macd_line[5]
        candleTooltip += "MACD底背离"
    else if macd_hist > 0 and macd_hist > macd_hist[1]
        candleTooltip += "MACD多头加速"
    else if macd_hist < 0 and macd_hist < macd_hist[1]
        candleTooltip += "MACD空头加速"
    else
        candleTooltip += "MACD震荡"
    
    // RSI分析
    rsi = ta.rsi(close, 14)
    candleTooltip += "\n【RSI】："
    if rsi > 70
        candleTooltip += "高位钝化(RSI:" + str.tostring(rsi, "#.1") + ")"
    else if rsi < 30
        candleTooltip += "低位反弹(RSI:" + str.tostring(rsi, "#.1") + ")"
    else if rsi > 50
        candleTooltip += "多头区域(RSI:" + str.tostring(rsi, "#.1") + ")"
    else
        candleTooltip += "空头区域(RSI:" + str.tostring(rsi, "#.1") + ")"
    
    // 资金流向分析(基于量价关系模拟)
    candleTooltip += "\n【资金流向】："
    if isObviousRise and isHighVolume
        candleTooltip += "主力净流入"
    else if isObviousFall and isHighVolume
        candleTooltip += "主力净流出"
    else if isObviousRise and isLowVolume
        candleTooltip += "资金谨慎看多"
    else if isObviousFall and isLowVolume
        candleTooltip += "资金恐慌有限"
    else
        candleTooltip += "资金观望"
    
    // OBV分析(简化版)
    candleTooltip += "\n【OBV】："
    obvChange = close > close[1] ? volume : close < close[1] ? -volume : 0
    obvTrend = ta.sma(obvChange, 5)
    if math.abs(obvTrend) < volume * 0.1
        candleTooltip += "横盘"
    else if obvTrend > 0
        candleTooltip += "翻升"
    else
        candleTooltip += "走弱"
    
    // 波动率分析(ATR)
    atr = ta.atr(14)
    atrChange = (atr - atr[1]) / atr[1] * 100
    candleTooltip += "\n【波动率】："
    if atrChange < -5
        candleTooltip += "ATR下降(收敛)→准备爆发"
    else if atrChange > 10
        candleTooltip += "ATR飙升→市场激烈"
    else if atr < ta.sma(atr, 20) * 0.8
        candleTooltip += "低波动→蓄势待发"
    else
        candleTooltip += "正常波动"


// === K线标记显示 ===
// 在K线下方显示标记，鼠标悬停时显示详细提示框
if enableCandleMarking
    // 添加技术指标计算
    macd_line = ta.ema(close, 12) - ta.ema(close, 26)
    signal_line = ta.ema(macd_line, 9)
    rsi = ta.rsi(close, 14)
    k = ta.stoch(close, high, low, 14)
    d = ta.sma(k, 3)

    // K线形态识别
    candlePattern = ""
    upperShadowRatio = close > open ? (high - close) / (close - open) : (high - open) / (open - close)
    lowerShadowRatio = close > open ? (close - low) / (close - open) : (open - low) / (open - close)
    
    if candleBodySize > avgBodySize * 2
        if isObviousRise
            candlePattern := "长阳线(实体>" + str.tostring(avgBodySize * 2, "#.##") + ")"
        else if isObviousFall
            candlePattern := "长阴线(实体>" + str.tostring(avgBodySize * 2, "#.##") + ")"
        else
            candlePattern := "大实体K线(涨跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%)"
    else if math.abs(candleChangePercent) < 0.3
        candlePattern := "十字星(波幅<0.3%)"
    else if close > open and upperShadowRatio > 2
        candlePattern := "上吊线(上影/实体>" + str.tostring(upperShadowRatio, "#.1") + "倍)"
    else if close < open and lowerShadowRatio > 2
        candlePattern := "锤头线(下影/实体>" + str.tostring(lowerShadowRatio, "#.1") + "倍)"
    else if isObviousRise
        candlePattern := "阳线(+" + str.tostring(candleChangePercent, "#.##") + "%)"
    else if isObviousFall
        candlePattern := "阴线(" + str.tostring(candleChangePercent, "#.##") + "%)"
    else
        candlePattern := "普通K线(±" + str.tostring(math.abs(candleChangePercent), "#.##") + "%)"

    // 成交量描述
    volumeDesc = ""
    volumeChangePercent = volume[1] > 0 ? (volume - volume[1]) / volume[1] * 100 : 0

    if isHighVolume
        volumeDesc := "放量" + str.tostring(math.abs(volumeChangePercent), "#.1") + "%"
        if isObviousRise
            volumeDesc += "，量价齐升(涨" + str.tostring(candleChangePercent, "#.##") + "%)"
        else if isObviousFall
            volumeDesc += "，量增价跌(跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%)"
        else
            volumeDesc += "，量比" + str.tostring(volume/avgVolume, "#.##")
    else if isLowVolume
        volumeDesc := "缩量" + str.tostring(math.abs(volumeChangePercent), "#.1") + "%"
        if isObviousFall
            volumeDesc += "杀跌(跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%)"
        else
            volumeDesc += "，量比" + str.tostring(volume/avgVolume, "#.##")
    else
        volumeDesc := "成交量正常(量比" + str.tostring(volume/avgVolume, "#.##") + ")"

    // 均线结构描述
    maStructure = ""
    ema20_60_diff = (ema1 - ema2) / ema2 * 100
    ema60_120_diff = (ema2 - ema3) / ema3 * 100
    price_ema20_diff = (close - ema1) / ema1 * 100
    
    if ema1 > ema2 and ema2 > ema3
        maStructure := "多头排列：EMA20比EMA60高" + str.tostring(math.abs(ema20_60_diff), "#.##") + "%"
    else if ema1 < ema2 and ema2 < ema3
        maStructure := "空头排列：EMA20比EMA60低" + str.tostring(math.abs(ema20_60_diff), "#.##") + "%"
    else if close < ema1
        if close[1] >= ema1[1]
            maStructure := "跌破EMA20支撑(距离-" + str.tostring(math.abs(price_ema20_diff), "#.##") + "%)"
        else
            maStructure := "持续运行在EMA20下方(-" + str.tostring(math.abs(price_ema20_diff), "#.##") + "%)"
    else if close > ema2
        if close[1] <= ema2[1]
            maStructure := "突破EMA60阻力(距离+" + str.tostring(price_ema20_diff, "#.##") + "%)"
        else
            maStructure := "持续运行在EMA60上方(+" + str.tostring(price_ema20_diff, "#.##") + "%)"
    else
        maStructure := "均线粘合(20-60日线差距" + str.tostring(math.abs(ema20_60_diff), "#.##") + "%)"

    // 技术指标描述
    techIndicators = ""
    macd_strength = math.abs(macd_line - signal_line)
    histogram = macd_line - signal_line
    
    if macd_line > signal_line and macd_line[1] <= signal_line[1]
        techIndicators := "MACD金叉突破(DIF:" + str.tostring(macd_line, "#.####") + " DEA:" + str.tostring(signal_line, "#.####") + " 柱:" + str.tostring(histogram, "#.####") + ")"
    else if macd_line < signal_line and macd_line[1] >= signal_line[1]
        techIndicators := "MACD死叉跌破(DIF:" + str.tostring(macd_line, "#.####") + " DEA:" + str.tostring(signal_line, "#.####") + " 柱:" + str.tostring(histogram, "#.####") + ")"
    else if rsi > 80
        techIndicators := "RSI严重超买(" + str.tostring(rsi, "#.1") + ">80,高位风险)"
    else if rsi > 70
        techIndicators := "RSI超买区(" + str.tostring(rsi, "#.1") + ">70,谨慎追涨)"
    else if rsi < 20
        techIndicators := "RSI严重超卖(" + str.tostring(rsi, "#.1") + "<20,筑底机会)"
    else if rsi < 30
        techIndicators := "RSI超卖区(" + str.tostring(rsi, "#.1") + "<30,关注反弹)"
    else if rsi > 50 and rsi[1] <= 50
        techIndicators := "RSI突破中线(" + str.tostring(rsi, "#.1") + ">50,转强信号)"
    else if rsi < 50 and rsi[1] >= 50
        techIndicators := "RSI跌破中线(" + str.tostring(rsi, "#.1") + "<50,转弱信号)"
    else if k > d and k[1] <= d[1]
        techIndicators := "KDJ金叉向上(K:" + str.tostring(k, "#.1") + ">D:" + str.tostring(d, "#.1") + ",买入信号)"
    else if k < d and k[1] >= d[1]
        techIndicators := "KDJ死叉向下(K:" + str.tostring(k, "#.1") + "<D:" + str.tostring(d, "#.1") + ",卖出信号)"
    else if k > 80 and d > 80
        techIndicators := "KDJ超买钝化(K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ",高位震荡)"
    else if k < 20 and d < 20
        techIndicators := "KDJ超卖钝化(K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ",低位盘整)"
    else
        techIndicators := "指标中性平衡(RSI:" + str.tostring(rsi, "#.1") + " K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ")"

    // 支撑阻力位分析
    supportLevel = math.min(low[1], low[2], low[3])  // 近期低点
    resistanceLevel = math.max(high[1], high[2], high[3])  // 近期高点
    
    supportDistance = (close - supportLevel) / supportLevel * 100
    resistanceDistance = (resistanceLevel - close) / close * 100
    ema20Distance = (close - ema1) / ema1 * 100
    ema60Distance = (close - ema2) / ema2 * 100

    supportDesc = ""
    resistanceDesc = ""

    if close <= supportLevel * 1.01  // 接近支撑位
        if supportDistance > 0
            supportDesc := "突破前低支撑" + formatPrice(supportLevel) + "(突破+" + str.tostring(supportDistance, "#.##") + "%)"
        else
            supportDesc := "测试前低支撑" + formatPrice(supportLevel) + "(距离" + str.tostring(supportDistance, "+#.##;-#.##") + "%)"
    else if close > ema1
        supportDesc := "站稳EMA20支撑" + formatPrice(ema1) + "(距离+" + str.tostring(ema20Distance, "#.##") + "%)"
    else if close > ema2
        supportDesc := "回调至EMA60支撑" + formatPrice(ema2) + "(距离+" + str.tostring(ema60Distance, "#.##") + "%)"
    else
        supportDesc := "跌破均线支撑，关注" + formatPrice(supportLevel) + "(距离" + str.tostring(supportDistance, "+#.##;-#.##") + "%)"

    if close >= resistanceLevel * 0.99  // 接近阻力位
        if resistanceDistance < 0
            resistanceDesc := "突破前高阻力" + formatPrice(resistanceLevel) + "(突破+" + str.tostring(math.abs(resistanceDistance), "#.##") + "%)"
        else
            resistanceDesc := "冲击前高阻力" + formatPrice(resistanceLevel) + "(距离" + str.tostring(resistanceDistance, "#.##") + "%)"
    else if resistanceDistance > 5
        resistanceDesc := "远离阻力位" + formatPrice(resistanceLevel) + "(距离+" + str.tostring(resistanceDistance, "#.##") + "%)"
    else
        resistanceDesc := "临近阻力位" + formatPrice(resistanceLevel) + "(距离+" + str.tostring(resistanceDistance, "#.##") + "%)"

    // 增加OBV计算用于背离分析
    obv = ta.cum(math.sign(ta.change(close)) * volume)
    obv_ma = ta.sma(obv, 5)
    
    // 背离分析
    macd_divergence = ""
    price_higher = high > high[5]
    price_lower = low < low[5]
    macd_higher = macd_line > macd_line[5]
    macd_lower = macd_line < macd_line[5]
    
    if price_higher and not macd_higher
        macd_divergence := "MACD顶背离"
    else if price_lower and not macd_lower
        macd_divergence := "MACD底背离"
    
    // 计算量比用于后续分析
    volumeRatio = volume > 0 and avgVolume > 0 ? volume / avgVolume : 1
    
    // 综合信号识别
    signal_pattern = ""
    
    // 1. 阶段顶部信号：价升量缩 + MACD顶背离 + RSI>80 + OBV走平
    if isObviousRise and isLowVolume and macd_divergence == "MACD顶背离" and rsi > 80 and math.abs(ta.change(obv_ma)) < avgVolume * 0.1
        signal_pattern := "【阶段顶部】价升量缩+" + macd_divergence + "+RSI超买(" + str.tostring(rsi, "#.1") + ">80)+OBV走平，主力出货阶段"
    
    // 2. 假突破信号：放量长上影 + 随后缩量阴线
    else if isHighVolume and upperShadowRatio > 2 and close < open
        signal_pattern := "【假突破陷阱】放量长上影(上影/实体>" + str.tostring(upperShadowRatio, "#.1") + "倍)+量比" + str.tostring(volumeRatio, "#.##") + "，诱多陷阱"
    
    // 3. 主升启动：放量突破平台 + 均线多头 + MACD翻红
    else if isHighVolume and isObviousRise and ema1 > ema2 and ema2 > ema3 and macd_line > 0 and macd_line > signal_line
        signal_pattern := "【主升启动】放量突破(量比" + str.tostring(volumeRatio, "#.##") + ")+均线多头排列+MACD翻红(" + str.tostring(macd_line, "#.####") + ">0)，主升浪确认"
    
    // 4. 筑底阶段：缩量阴线 → 放量阳线 + MACD底背离
    else if isLowVolume and isObviousFall and macd_divergence == "MACD底背离"
        signal_pattern := "【筑底阶段】缩量阴线(量比" + str.tostring(volumeRatio, "#.##") + ")+" + macd_divergence + "，吸筹完成信号"
    
    // 5. 真反转：OBV突破前高 + RSI上穿50 + 均线扭转
    else if obv > ta.highest(obv, 20) and rsi > 50 and rsi[1] <= 50 and ema1 > ema1[1] and ema1[1] <= ema1[2]
        signal_pattern := "【真反转确认】OBV突破前高+RSI上穿50(" + str.tostring(rsi, "#.1") + ">50)+均线扭转，趋势反转确认"
    
    // 6. 量价背离：价格新高但成交量萎缩
    else if high > ta.highest(high, 10) and volume < ta.sma(volume, 5) * 0.8
        signal_pattern := "【量价背离】创新高(" + formatPrice(high) + ")但成交量萎缩(量比" + str.tostring(volumeRatio, "#.##") + ")，警惕回调风险"
    
    // 7. 底部放量：低位放量阳线 + MACD金叉
    else if low <= ta.lowest(low, 10) * 1.05 and isHighVolume and isObviousRise and macd_line > signal_line and macd_line[1] <= signal_line[1]
        signal_pattern := "【底部放量】低位放量阳线(涨" + str.tostring(candleChangePercent, "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")+MACD金叉，筑底成功"
    
    // 8. 高位缩量：高位缩量阴线预警
    else if high >= ta.highest(high, 10) * 0.95 and isLowVolume and isObviousFall
        signal_pattern := "【高位缩量】高位缩量阴线(跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")，谨防深度回调"
    
    // 综合结论
    conclusion = ""
    priceStrength = math.abs(candleChangePercent)
    
    // 优先显示复合信号
    if signal_pattern != ""
        conclusion := signal_pattern
    else
        // 添加更多技术指标组合信号
        if macd_line > signal_line and macd_line[1] <= signal_line[1] and k > d and k[1] <= d[1] and rsi > 50
            conclusion := "【多重金叉共振】MACD金叉(" + str.tostring(macd_line, "#.####") + ")+KDJ金叉(K:" + str.tostring(k, "#.1") + ">D:" + str.tostring(d, "#.1") + ")+RSI强势(" + str.tostring(rsi, "#.1") + ">50)，强烈看涨"
        
        else if macd_line < signal_line and macd_line[1] >= signal_line[1] and k < d and k[1] >= d[1] and rsi < 50
            conclusion := "【多重死叉共振】MACD死叉(" + str.tostring(macd_line, "#.####") + ")+KDJ死叉(K:" + str.tostring(k, "#.1") + "<D:" + str.tostring(d, "#.1") + ")+RSI弱势(" + str.tostring(rsi, "#.1") + "<50)，强烈看跌"
        
        else if rsi > 80 and k > 80 and d > 80 and isObviousRise and isLowVolume
            conclusion := "【超买钝化】RSI超买(" + str.tostring(rsi, "#.1") + ">80)+KDJ超买(K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ")+价升量缩，顶部风险极高"
        
        else if rsi < 20 and k < 20 and d < 20 and isObviousFall and isLowVolume
            conclusion := "【超卖钝化】RSI超卖(" + str.tostring(rsi, "#.1") + "<20)+KDJ超卖(K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ")+缩量下跌，底部机会显现"
        
        else
            // 判断筑顶筑底信号强度
            signalStrength = priceStrength * volumeRatio
            
            if trendUp and isObviousRise and isHighVolume
                if candleChangePercent > 3 and volumeRatio > 2
                    conclusion := "强势筑底完成：暴涨" + str.tostring(candleChangePercent, "#.##") + "%，爆量" + str.tostring(volumeRatio, "#.##") + "倍，突破" + formatPrice(resistanceLevel) + "强势看涨"
                else
                    conclusion := "筑底回升确认：上涨" + str.tostring(candleChangePercent, "#.##") + "%，放量" + str.tostring(volumeRatio, "#.##") + "倍，突破" + formatPrice(resistanceLevel) + "看涨"
            else if trendDown and isObviousFall and isHighVolume
                if math.abs(candleChangePercent) > 3 and volumeRatio > 2
                    conclusion := "筑顶暴跌确认：重挫" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，恐慌抛售量" + str.tostring(volumeRatio, "#.##") + "倍，跌破" + formatPrice(supportLevel) + "看空"
                else
                    conclusion := "筑顶下跌信号：下跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，放量" + str.tostring(volumeRatio, "#.##") + "倍，跌破" + formatPrice(supportLevel) + "看跌"
            else if isObviousRise and isLowVolume
                conclusion := "反弹乏力警告：涨" + str.tostring(candleChangePercent, "#.##") + "%，但缩量" + str.tostring(volumeRatio, "#.##") + "倍，量价背离谨慎追高"
            else if isObviousFall and isLowVolume
                conclusion := "缩量杀跌有限：跌" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + "倍，关注" + formatPrice(supportLevel) + "支撑反弹"
            else if priceStrength < 0.5 and volumeRatio < 0.8
                conclusion := "横盘缩量整理：波幅" + str.tostring(priceStrength, "#.##") + "%，缩量" + str.tostring(volumeRatio, "#.##") + "倍，蓄势待发等方向"
            else if signalStrength > 3
                conclusion := "震荡加剧信号：波幅" + str.tostring(priceStrength, "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + "倍，关注突破方向"
            else
                conclusion := "常规震荡运行：波幅" + str.tostring(priceStrength, "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + "倍，维持区间操作"

    // 量价关系分析
    volumePriceAnalysis = ""
    if isHighVolume and isObviousRise
        volumePriceAnalysis := "量价齐升：放量上涨(" + str.tostring(candleChangePercent, "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")，多头强势"
    else if isHighVolume and isObviousFall
        volumePriceAnalysis := "量增价跌：放量下跌(" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")，空头力量强"
    else if isLowVolume and isObviousRise
        volumePriceAnalysis := "量价背离：缩量上涨(" + str.tostring(candleChangePercent, "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")，反弹乏力"
    else if isLowVolume and isObviousFall
        volumePriceAnalysis := "缩量下跌：杀跌有限(" + str.tostring(math.abs(candleChangePercent), "#.##") + "%，量比" + str.tostring(volumeRatio, "#.##") + ")，恐慌情绪缓解"
    else if high > ta.highest(high, 10) and volume < ta.sma(volume, 5) * 0.8
        volumePriceAnalysis := "量价背离：创新高但缩量(" + formatPrice(high) + "，量比" + str.tostring(volumeRatio, "#.##") + ")，警惕顶部风险"
    else
        volumePriceAnalysis := "量价配合：价量关系正常(量比" + str.tostring(volumeRatio, "#.##") + ")，走势健康"

    // 构建五大类分析提示信息
    tooltipText = "【K线分析】" + candlePattern + "\n"
    tooltipText += "涨跌幅：" + str.tostring(candleChangePercent, "+#.##;-#.##") + "%"
    tooltipText += "，波动：" + str.tostring(((high-low)/close)*100, "#.##") + "%"
    tooltipText += "，实体：" + str.tostring((candleBodySize/close)*100, "#.##") + "%\n\n"

    tooltipText += "【成交量分析】" + volumeDesc + "\n"
    tooltipText += "当前量：" + formatVolume(volume) + "，平均量：" + formatVolume(avgVolume) + "\n"
    tooltipText += "量比：" + str.tostring(volumeRatio, "#.##") + "，" + (volumeRatio > 1.5 ? "明显放量" : volumeRatio < 0.8 ? "明显缩量" : "正常成交") + "\n\n"

    tooltipText += "【量价分析】" + volumePriceAnalysis + "\n"
    if macd_divergence != ""
        tooltipText += "背离信号：" + macd_divergence + "，关注趋势变化\n"
    tooltipText += "\n"

    tooltipText += "【技术指标分析】\n"
    tooltipText += "MACD：" + (macd_line > signal_line ? "多头(" : "空头(") + str.tostring(macd_line, "#.####") + ")" + 
                  (macd_line > signal_line and macd_line[1] <= signal_line[1] ? " 🔥金叉" : 
                   macd_line < signal_line and macd_line[1] >= signal_line[1] ? " ❄️死叉" : ""
                  ) + "\n"
    tooltipText += "RSI(" + str.tostring(rsi, "#.1") + ")：" + 
                  (rsi > 80 ? "🔴严重超买" : rsi > 70 ? "🟡超买区" : 
                   rsi < 20 ? "🟢严重超卖" : rsi < 30 ? "🟡超卖区" : 
                   rsi > 50 ? "💪强势区" : "📉弱势区") + "\n"
    tooltipText += "KDJ(K:" + str.tostring(k, "#.1") + " D:" + str.tostring(d, "#.1") + ")：" + 
                  (k > d and k[1] <= d[1] ? "🔥金叉" : k < d and k[1] >= d[1] ? "❄️死叉" : 
                   k > 80 and d > 80 ? "🔴超买钝化" : k < 20 and d < 20 ? "🟢超卖钝化" : "中性") + "\n"
    tooltipText += "均线：" + maStructure + "\n"
    tooltipText += "支撑：" + supportDesc + "\n"
    tooltipText += "阻力：" + resistanceDesc + "\n\n"

    tooltipText += "【结论】" + conclusion

    // 更新K线信息显示条件（为全局plotshape准备）
    showKlineInfo := isObviousRise or isObviousFall or math.abs(candleChangePercent) > 1.0
    
    // 将新的五大类分析内容赋值给candleTooltip用于显示
    candleTooltip := tooltipText


// ===================================================
// === 专业交易策略参数 ===
// ===================================================

// === 交易策略总开关 ===
enableStrategy = input.bool(true, title = '启用交易策略')

// === 交易方向设置 ===
tradeDirection = input.string('看多', title = '交易方向', options = ['看多', '看空', '所有'])

// 策略快线选择
strategyFast = input.string('EMA1', title = '策略快线', options = ['EMA1', 'SMA1', 'EMA2', 'SMA2', 'EMA3', 'SMA3'])
// 策略慢线选择
strategySlow = input.string('EMA2', title = '策略慢线', options = ['EMA1', 'SMA1', 'EMA2', 'SMA2', 'EMA3', 'SMA3'])

// === 交易日期控制 ===
startDate = input.time(timestamp("2025-01-01 00:00"), title = '交易开始日期')
endDate = input.time(timestamp("2099-01-01 00:00"), title = '交易结束日期')

// === 交易日期检查 ===
isInTradingPeriod = time >= startDate and time <= endDate


// === 交易执行价格 ===
entryTiming = input.string('收盘价', title = '开仓执行价格', options = ['开盘价', '收盘价', '盘中'])
exitTiming = input.string('收盘价', title = '平仓执行价格', options = ['开盘价', '收盘价', '盘中'])

// === 缓冲区设置 ===
bufferValue = input.float(0.0, title = '缓冲区数值', minval = 0.0, maxval = 50.0, step = 0.1, tooltip = '开仓后在此区间内不执行形态修复和平仓信号')
bufferUnit = input.string('%', title = '缓冲区单位', options = ['%', '价格'])

// === 根据选择获取对应的均线值（用于策略交易） ===
strategyFastMA = strategyFast == 'EMA1' ? ema1 : strategyFast == 'SMA1' ? sma1 : strategyFast == 'EMA2' ? ema2 : strategyFast == 'SMA2' ? sma2 : strategyFast == 'EMA3' ? ema3 : sma3
strategySlowMA = strategySlow == 'EMA1' ? ema1 : strategySlow == 'SMA1' ? sma1 : strategySlow == 'EMA2' ? ema2 : strategySlow == 'SMA2' ? sma2 : strategySlow == 'EMA3' ? ema3 : sma3

// === 核心信号识别 ===
// 金叉死叉信号
goldenCross = strategyFastMA > strategySlowMA and strategyFastMA[1] <= strategySlowMA[1] // 金叉：快线上穿慢线
deathCross = strategyFastMA < strategySlowMA and strategyFastMA[1] >= strategySlowMA[1] // 死叉：快线下穿慢线

// 策略趋势判断
strategyTrendUp = strategyFastMA > strategySlowMA
strategyTrendDown = strategyFastMA < strategySlowMA

// 更新全局趋势判断为基于策略均线
trendUp := strategyTrendUp
trendDown := strategyTrendDown


// === 交易执行价格计算 ===
entryPrice_exec = entryTiming == '开盘价' ? open : entryTiming == '收盘价' ? close : close

// === 缓冲区计算 ===
var float bufferEntryPrice = na

// 记录真实开仓价格（使用策略的平均开仓价格）
if strategy.position_size[1] == 0 and strategy.position_size != 0
    bufferEntryPrice := strategy.position_avg_price

// 重置缓冲区（平仓时）
if strategy.position_size == 0
    bufferEntryPrice := na

// 计算缓冲区设置
var float bufferUpperBound = na
var float bufferLowerBound = na
var bool bufferEnabled = false

if bufferValue > 0 and not na(bufferEntryPrice)
    if bufferUnit == '%'
        // 百分比模式
        bufferPercent = bufferValue / 100
        bufferUpperBound := bufferEntryPrice * (1 + bufferPercent)
        bufferLowerBound := bufferEntryPrice * (1 - bufferPercent)
    else
        // 价格模式
        bufferUpperBound := bufferEntryPrice + bufferValue
        bufferLowerBound := bufferEntryPrice - bufferValue
    bufferEnabled := true
else
    bufferUpperBound := na
    bufferLowerBound := na
    bufferEnabled := false

// 判断是否在缓冲区内
inBufferZone = bufferEnabled and not na(bufferEntryPrice) and close >= bufferLowerBound and close <= bufferUpperBound


// === 专业交易逻辑 ===
// === 做多信号 ===
// 1. 做多开仓信号（第一次金叉）
longEntrySignal = goldenCross and strategy.position_size == 0 and isInTradingPeriod

// 2. 做多加仓信号（阳线 + 趋势向上）
// 阳线判断：收盘价高于开盘价
isBullish = close > open

var lastAddPositionBar = 0
// 当前价格相对于快线的偏离量，用于判断回踩
pullbackThreshold = 0.01 // 可调回踩幅度，例如 1%
// 判断回踩未破快线
isPullback = close <= strategyFastMA * (1 + pullbackThreshold) and close >= strategyFastMA
// 加仓条件：阳线 + 趋势向上 + 已有多头仓位 + 明确回踩快线
longAddSignal = isBullish and strategyTrendUp and strategy.position_size > 0 and isPullback and isInTradingPeriod

// 3. 做多平仓信号（死叉或形态破快线）
// 形态破快线判断：价格跌破快线
breakFastLine = close < strategyFastMA
// 基础平仓信号（缓冲区内不执行）
longExitSignal = (deathCross or breakFastLine) and strategy.position_size > 0 and not inBufferZone

// 4. 做多重新入场信号（形态修复）
// 当价格重新回到快线之上时，可以重新入场（缓冲区内不执行）
longReEntrySignal = close > strategyFastMA and strategy.position_size == 0 and strategyTrendUp and isInTradingPeriod and not inBufferZone

// === 做空信号 ===
// 1. 做空开仓信号（第一次死叉）
shortEntrySignal = deathCross and strategy.position_size == 0 and isInTradingPeriod

// 2. 做空加仓信号（阴线 + 趋势向下）
// 阴线判断：收盘价低于开盘价
isBearish = close < open
// 判断反弹未破快线
isRebound = close >= strategyFastMA * (1 - pullbackThreshold) and close <= strategyFastMA
// 加仓条件：阴线 + 趋势向下 + 已有空头仓位 + 明确反弹至快线
shortAddSignal = isBearish and strategyTrendDown and strategy.position_size < 0 and isRebound and isInTradingPeriod

// 3. 做空平仓信号（金叉或形态破快线）
// 形态破快线判断（做空时为价格涨破快线）
breakFastLineShort = close > strategyFastMA
// 基础平仓信号（缓冲区内不执行）
shortExitSignal = (goldenCross or breakFastLineShort) and strategy.position_size < 0 and not inBufferZone

// 4. 做空重新入场信号（形态修复）
// 当价格重新跌破快线时，可以重新做空入场（缓冲区内不执行）
shortReEntrySignal = close < strategyFastMA and strategy.position_size == 0 and strategyTrendDown and isInTradingPeriod and not inBufferZone

// === 兼容性变量（保持原有变量名） ===
firstEntrySignal = longEntrySignal
pullbackSignal = longAddSignal
exitSignal = longExitSignal
reEntrySignal = longReEntrySignal

// === 交易执行价格判断 ===
canEntry = entryTiming == '盘中' or (entryTiming == '开盘价' and barstate.isconfirmed) or (entryTiming == '收盘价' and barstate.isconfirmed)
canExit = exitTiming == '盘中' or (exitTiming == '开盘价' and barstate.isconfirmed) or (exitTiming == '收盘价' and barstate.isconfirmed)

// 根据选择确定平仓执行价格
exitPrice_exec = exitTiming == '开盘价' ? open : exitTiming == '收盘价' ? close : close

// === 交易执行 ===
if enableStrategy
    // === 做多交易执行 ===
    if tradeDirection == '看多' or tradeDirection == '所有'
        // 做多开仓
        if longEntrySignal and canEntry
            if barstate.isconfirmed or entryTiming == '盘中'
                strategy.entry('金叉开仓', strategy.long, qty = strategy.equity / entryPrice_exec)

        // 做多加仓
        if longAddSignal and canEntry
            if barstate.isconfirmed or entryTiming == '盘中'
                strategy.entry('阳线加仓', strategy.long, qty = strategy.equity * 0.2 / entryPrice_exec)

        // 做多平仓
        if longExitSignal and canExit
            exitComment = deathCross ? '死叉平仓' : '破线平仓'
            if barstate.isconfirmed or exitTiming == '盘中'
                strategy.close_all(comment = exitComment)

        // 做多重新入场
        if longReEntrySignal and canEntry
            if barstate.isconfirmed or exitTiming == '盘中'
                strategy.entry('形态修复入场', strategy.long, qty = strategy.equity / entryPrice_exec)

    // === 做空交易执行 ===
    if tradeDirection == '看空' or tradeDirection == '所有'
        // 做空开仓
        if shortEntrySignal and canEntry
            if barstate.isconfirmed or entryTiming == '盘中'
                strategy.entry('死叉开空', strategy.short, qty = strategy.equity / entryPrice_exec)

        // 做空加仓
        if shortAddSignal and canEntry
            if barstate.isconfirmed or entryTiming == '盘中'
                strategy.entry('阴线加空', strategy.short, qty = strategy.equity * 0.2 / entryPrice_exec)

        // 做空平仓
        if shortExitSignal and canExit
            exitComment = goldenCross ? '金叉平仓' : '破线平仓'
            if barstate.isconfirmed or exitTiming == '盘中'
                strategy.close_all(comment = exitComment)

        // 做空重新入场
        if shortReEntrySignal and canEntry
            if barstate.isconfirmed or exitTiming == '盘中'
                strategy.entry('形态修复做空', strategy.short, qty = strategy.equity / entryPrice_exec)

// === 信号标记 ===
// 做多信号标记
plotshape(enableStrategy and longEntrySignal and (tradeDirection == '看多' or tradeDirection == '所有'), title = '做多开仓', location = location.belowbar, color = color.green, style = shape.triangleup, size = size.normal)
plotshape(enableStrategy and longAddSignal and (tradeDirection == '看多' or tradeDirection == '所有'), title = '做多加仓', location = location.belowbar, color = color.blue, style = shape.circle, size = size.small)
plotshape(enableStrategy and longExitSignal and (tradeDirection == '看多' or tradeDirection == '所有'), title = '做多平仓', location = location.abovebar, color = color.red, style = shape.triangledown, size = size.normal)
plotshape(enableStrategy and longReEntrySignal and (tradeDirection == '看多' or tradeDirection == '所有'), title = '做多重入', location = location.belowbar, color = color.lime, style = shape.diamond, size = size.small)

// 做空信号标记
plotshape(enableStrategy and shortEntrySignal and (tradeDirection == '看空' or tradeDirection == '所有'), title = '做空开仓', location = location.abovebar, color = color.orange, style = shape.triangledown, size = size.normal)
plotshape(enableStrategy and shortAddSignal and (tradeDirection == '看空' or tradeDirection == '所有'), title = '做空加仓', location = location.abovebar, color = color.purple, style = shape.circle, size = size.small)
plotshape(enableStrategy and shortExitSignal and (tradeDirection == '看空' or tradeDirection == '所有'), title = '做空平仓', location = location.belowbar, color = color.yellow, style = shape.triangleup, size = size.normal)
plotshape(enableStrategy and shortReEntrySignal and (tradeDirection == '看空' or tradeDirection == '所有'), title = '做空重入', location = location.abovebar, color = color.fuchsia, style = shape.diamond, size = size.small)

// === 缓冲区可视化 ===
// 缓冲区实体显示，只在价格未突破时显示
bufferShow = bufferEnabled and not na(bufferUpperBound) and not na(bufferLowerBound) and not na(bufferEntryPrice) and close <= bufferUpperBound and close >= bufferLowerBound

// 绘制缓冲区上边界线
bufferUpperLine = bufferShow ? bufferUpperBound : na
plot(bufferUpperLine, color = color.new(color.orange, 50), linewidth = 2, title = '缓冲区上边界', style = plot.style_line)

// 绘制缓冲区下边界线
bufferLowerLine = bufferShow ? bufferLowerBound : na
plot(bufferLowerLine, color = color.new(color.orange, 50), linewidth = 2, title = '缓冲区下边界', style = plot.style_line)

// 绘制缓冲区中线（开仓基准价）
bufferCenterLine = bufferShow ? bufferEntryPrice : na
plot(bufferCenterLine, color = color.new(color.blue, 60), linewidth = 1, title = '开仓基准价', style = plot.style_line, linestyle = plot.linestyle_dashed)

// 缓冲区透明实体背景
fill(plot(bufferUpperLine, display = display.none), plot(bufferLowerLine, display = display.none), color = color.new(color.orange, 85), title = '缓冲区实体')

// === 策略信息显示 ===
var table infoTable = showInfoTable ? table.new(position.top_right, 2, enableCandleMarking ? 17 : 12, bgcolor = color.white, border_width = 1) : na
if barstate.islast and showInfoTable and not na(infoTable)
    table.cell(infoTable, 0, 0, '策略状态', text_color = color.black, bgcolor = color.gray)
    table.cell(infoTable, 1, 0, '双向均线交叉策略', text_color = color.black, bgcolor = color.gray)

    table.cell(infoTable, 0, 1, '交易方向', text_color = color.black, bgcolor = color.gray)
    directionColor = tradeDirection == '看多' ? color.green : tradeDirection == '看空' ? color.red : color.blue
    table.cell(infoTable, 1, 1, tradeDirection, text_color = color.black, bgcolor = directionColor)

    table.cell(infoTable, 0, 2, '趋势判断', text_color = color.black, bgcolor = color.gray)
    table.cell(infoTable, 1, 2, strategyTrendUp ? '上涨' : '下跌', text_color = color.black, bgcolor = strategyTrendUp ? color.green : color.red)

    table.cell(infoTable, 0, 3, '交叉信号', text_color = color.black, bgcolor = color.gray)
    table.cell(infoTable, 1, 3, goldenCross ? '金叉' : deathCross ? '死叉' : '等待', text_color = color.black, bgcolor = goldenCross ? color.green : deathCross ? color.red : color.gray)

    table.cell(infoTable, 0, 4, '策略快线', text_color = color.black, bgcolor = color.gray)
    table.cell(infoTable, 1, 4, strategyFast, text_color = color.black, bgcolor = color.blue)

    table.cell(infoTable, 0, 5, '策略慢线', text_color = color.black, bgcolor = color.gray)
    table.cell(infoTable, 1, 5, strategySlow, text_color = color.black, bgcolor = color.orange)

    table.cell(infoTable, 0, 6, '当前仓位', text_color = color.black, bgcolor = color.gray)
    positionStatus = strategy.position_size > 0 ? '多头' : strategy.position_size < 0 ? '空头' : '空仓'
    positionBgColor = strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : color.gray
    table.cell(infoTable, 1, 6, positionStatus, text_color = color.black, bgcolor = positionBgColor)

    table.cell(infoTable, 0, 7, '仓位比例', text_color = color.black, bgcolor = color.gray)
    positionRatio = math.abs(strategy.position_size * close / strategy.equity)
    table.cell(infoTable, 1, 7, str.tostring(positionRatio * 100, '#.##') + '%', text_color = color.black, bgcolor = color.blue)

    table.cell(infoTable, 0, 8, '形态状态', text_color = color.black, bgcolor = color.gray)
    formationStatus = strategy.position_size > 0 ? (close > strategyFastMA ? '形态完好' : '形态破快') : strategy.position_size < 0 ? (close < strategyFastMA ? '形态完好' : '形态破快') : (close > strategyFastMA ? '多头形态' : '空头形态')
    formationColor = strategy.position_size > 0 ? (close > strategyFastMA ? color.green : color.red) : strategy.position_size < 0 ? (close < strategyFastMA ? color.green : color.red) : (close > strategyFastMA ? color.lime : color.orange)
    table.cell(infoTable, 1, 8, formationStatus, text_color = color.black, bgcolor = formationColor)

    table.cell(infoTable, 0, 9, '缓冲区状态', text_color = color.black, bgcolor = color.gray)
    bufferStatus = ''
    if bufferEnabled and not na(bufferEntryPrice)
        if inBufferZone
            bufferStatus := '信号屏蔽中'
        else
            bufferStatus := '正常交易'
    else if bufferValue > 0
        bufferStatus := '等待开仓'
    else
        bufferStatus := '已关闭'

    bufferColor = bufferEnabled and not na(bufferEntryPrice) ? (inBufferZone ? color.red : color.green) : color.gray
    table.cell(infoTable, 1, 9, bufferStatus, text_color = color.black, bgcolor = bufferColor)

    table.cell(infoTable, 0, 10, '缓冲区设置', text_color = color.black, bgcolor = color.gray)
    bufferSettingText = ''
    if bufferEnabled and not na(bufferEntryPrice)
        if bufferUnit == '%'
            bufferSettingText := str.tostring(bufferValue, '#.#') + '% [' + str.tostring(bufferLowerBound, '#.##') + ' - ' + str.tostring(bufferUpperBound, '#.##') + ']'
        else
            bufferSettingText := str.tostring(bufferValue, '#.##') + ' [' + str.tostring(bufferLowerBound, '#.##') + ' - ' + str.tostring(bufferUpperBound, '#.##') + ']'
    else
        bufferSettingText := bufferValue > 0 ? '等待开仓' : '关闭'
    table.cell(infoTable, 1, 10, bufferSettingText, text_color = color.black, bgcolor = color.blue)

    table.cell(infoTable, 0, 11, 'K线分析', text_color = color.black, bgcolor = color.gray)
    candleMarkText = ''
    if enableCandleMarking
        if isObviousRise
            candleMarkText := '📈 ' + str.tostring(candleChangePercent, '#.##') + '% [详情]'
        else if isObviousFall
            candleMarkText := '📉 ' + str.tostring(candleChangePercent, '#.##') + '% [详情]'
        else
            candleMarkText := '➡️ ' + str.tostring(candleChangePercent, '#.##') + '% [详情]'
    else
        candleMarkText := '已关闭'

    candleMarkColor = enableCandleMarking ? (isObviousRise ? color.lime : isObviousFall ? color.red : color.gray) : color.gray
    table.cell(infoTable, 1, 11, candleMarkText, text_color = color.black, bgcolor = candleMarkColor)

    // K线详细分析信息（当启用K线标记时显示更多行）
    if enableCandleMarking
        // 详细K线数据
        table.cell(infoTable, 0, 12, 'OHLC数据', text_color = color.black, bgcolor = color.gray)
        ohlcText = 'O:' + str.tostring(open, '#.##') + ' H:' + str.tostring(high, '#.##') + ' L:' + str.tostring(low, '#.##') + ' C:' + str.tostring(close, '#.##')
        table.cell(infoTable, 1, 12, ohlcText, text_color = color.black, bgcolor = color.blue)

        // 量价关系分析
        table.cell(infoTable, 0, 13, '量价关系', text_color = color.black, bgcolor = color.gray)
        volumePriceText = ''
        volumePriceColor = color.gray
        if isObviousRise and isHighVolume
            volumePriceText := '🟢 涨量配合-健康上涨'
            volumePriceColor := color.lime
        else if isObviousRise and isLowVolume
            volumePriceText := '🟡 涨缩量-需要警惕'
            volumePriceColor := color.yellow
        else if isObviousFall and isHighVolume
            volumePriceText := '🔴 跌量释放-空头发力'
            volumePriceColor := color.red
        else if isObviousFall and isLowVolume
            volumePriceText := '🟠 跌缩量-杀跌有限'
            volumePriceColor := color.orange
        else
            volumePriceText := '⚪ 正常震荡'
        table.cell(infoTable, 1, 13, volumePriceText, text_color = color.black, bgcolor = volumePriceColor)

        // 成交量详细分析
        table.cell(infoTable, 0, 14, '成交量详情', text_color = color.black, bgcolor = color.gray)
        volumeDetailText = str.tostring(volume/avgVolume, '#.##') + '倍 ('
        if isHighVolume
            volumeDetailText += '放量>'  + str.tostring(volumeHighThreshold, '#.#') + '倍)'
        else if isLowVolume
            volumeDetailText += '缩量<' + str.tostring(volumeLowThreshold, '#.#') + '倍)'
        else
            volumeDetailText += '正常量)'
        volumeColor = isHighVolume ? color.lime : isLowVolume ? color.orange : color.gray
        table.cell(infoTable, 1, 14, volumeDetailText, text_color = color.black, bgcolor = volumeColor)

        // 均线关系分析
        table.cell(infoTable, 0, 15, '均线关系', text_color = color.black, bgcolor = color.gray)
        maRelationText = '快线(' + strategyFast + ')距离:' + str.tostring(((close - strategyFastMA) / strategyFastMA) * 100, '#.##') + '% | 慢线(' + strategySlow + ')距离:' + str.tostring(((close - strategySlowMA) / strategySlowMA) * 100, '#.##') + '%'
        maRelationColor = close > strategyFastMA and close > strategySlowMA ? color.lime : close < strategyFastMA and close < strategySlowMA ? color.red : color.yellow
        table.cell(infoTable, 1, 15, maRelationText, text_color = color.black, bgcolor = maRelationColor)

        // 趋势状态
        table.cell(infoTable, 0, 16, '趋势状态', text_color = color.black, bgcolor = color.gray)
        trendText = trendUp ? '📈 多头趋势 (' + strategyFast + '>' + strategySlow + ')' : '📉 空头趋势 (' + strategyFast + '<' + strategySlow + ')'
        trendColor = trendUp ? color.green : color.red
        table.cell(infoTable, 1, 16, trendText, text_color = color.black, bgcolor = trendColor)


